package com.test.tools;import com.common.Md5Ecode;import com.constant.Parameter;import com.qihancloud.QiHanServer;import javafx.application.Application;import javafx.beans.value.ChangeListener;import javafx.beans.value.ObservableValue;import javafx.event.ActionEvent;import javafx.event.EventHandler;import static javafx.geometry.HPos.RIGHT;import javafx.geometry.Insets;import javafx.geometry.Pos;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.control.Label;import javafx.scene.control.PasswordField;import javafx.scene.control.TextField;import javafx.scene.layout.GridPane;import javafx.scene.layout.HBox;import javafx.scene.text.Text;import javafx.stage.Stage;public class Login extends Application {	TextField userTextField;	PasswordField pwBox;	public static Text actiontarget;	public static String myaccount;	public static String md5_pwd;	public static int my_type;	public static TextField serverA_addr;	public static TextField serverB_addr;	public static TextField redisA_port;	public static TextField redisB_port;	    @Override    public void start(final Stage primaryStage) {        primaryStage.setTitle("Qlink || Device Login");        GridPane grid = new GridPane();        //grid.setAlignment(Pos.CENTER);        grid.setHgap(10);        grid.setVgap(10);        grid.setPadding(new Insets(25, 25, 25, 25));                Text scenetitle = new Text("Welcome");        scenetitle.setId("welcome-text");        grid.add(scenetitle, 0, 0, 2, 1);        Label serverA_name=new Label("ServerA:");        serverA_addr = new TextField();        serverA_addr.setStyle("-fx-base:#595959");        serverA_addr.setPrefWidth(120);        grid.add(serverA_name, 0, 1);                Label serverA_port=new Label("Redis_Port");        redisA_port = new TextField();        redisA_port.setStyle("-fx-base:#595959");        redisA_port.setPrefWidth(30);                       Label server2_name=new Label("ServerB:");        serverB_addr = new TextField();        serverB_addr.setStyle("-fx-base:#595959");        serverB_addr.setPrefWidth(120);        grid.add(server2_name, 0, 2);                Label serverB_port=new Label("Redis_Port");        redisB_port = new TextField();        redisB_port.setStyle("-fx-base:#595959");        redisB_port.setPrefWidth(30);                               Label userName = new Label("Account:");        grid.add(userName, 0, 3);        userTextField = new TextField();        grid.add(userTextField, 1, 3,3,1);                        Label pw = new Label("Password:");        grid.add(pw, 0, 4);        pwBox = new PasswordField();        grid.add(pwBox, 1, 4,3,1);        //根据grid顺序来确定光标定位在哪个输入框        grid.add(serverA_addr, 1, 1);        grid.add(serverB_addr, 1, 2);                grid.add(serverA_port,2,1);        grid.add(redisA_port, 3,1);        grid.add(serverB_port,2,2);        grid.add(redisB_port, 3,2);                Button btn = new Button("Login");        HBox hbBtn = new HBox(10);        hbBtn.setAlignment(Pos.BOTTOM_RIGHT);        hbBtn.getChildren().add(btn);        hbBtn.setPrefWidth(100);        grid.add(hbBtn, 3, 5);        actiontarget = new Text();        grid.add(actiontarget, 0, 7);        grid.setColumnSpan(actiontarget, 2);        grid.setHalignment(actiontarget, RIGHT);        actiontarget.setId("actiontarget");        		        userTextField.textProperty().addListener(new ChangeListener<String>() {			@Override			public void changed(ObservableValue<? extends String> arg0,					String oldValue, String newValue) {								if (newValue.length()==32){					pwBox.setDisable(true);				}				else{					pwBox.setDisable(false);				}					}        });		        btn.setOnAction(new EventHandler<ActionEvent>() {            @Override            public void handle(ActionEvent e) {                if(check_account()){                	ToolsLogic.flag=false;                	primaryStage.hide();                      new Tools();                }            }        });                serverA_addr.setText("202.104.137.246");        redisA_port.setText("6278");        serverB_addr.setText("202.104.137.246");        redisB_port.setText("6279");                     Scene scene = new Scene(grid, 430, 370);        primaryStage.setScene(scene);        scene.getStylesheets().add(Login.class.getResource("Login.css").toExternalForm());        primaryStage.show();            }        public boolean check_account(){    	    	Parameter.QIHANYUNIP_A=serverA_addr.getText();    	Parameter.QIHANYUNIP_B=serverB_addr.getText();    	Parameter.REDIS_A= Integer.parseInt(redisA_port.getText());    	Parameter.REDIS_B= Integer.parseInt(redisB_port.getText());    	    		    	myaccount=userTextField.getText();    	String pwd=pwBox.getText();    	md5_pwd=Md5Ecode.md5Ecode(pwd);    	    	int acc_length=myaccount.length();    	if (acc_length<6 ||acc_length>32){			actiontarget.setText("account length is illegal ");			return false;		}    	if (acc_length==32){    		my_type=2;    		ToolsLogic.server1=new QiHanServer(myaccount, "device");    		pwBox.clear();    		if (ToolsLogic.server1.login()){    		return true;    		}    	}    	else{    		my_type=1;    		ToolsLogic.server1 = new QiHanServer(myaccount, "qlink_id");        	if (ToolsLogic.server1.login(md5_pwd)){        		return true;        	}    	}		return false;    }           public static void main(String[] args) {        launch(args);    }}